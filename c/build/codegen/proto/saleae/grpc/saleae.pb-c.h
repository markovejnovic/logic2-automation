/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: saleae/grpc/saleae.proto */

#ifndef PROTOBUF_C_saleae_2fgrpc_2fsaleae_2eproto__INCLUDED
#define PROTOBUF_C_saleae_2fgrpc_2fsaleae_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct Saleae__Automation__Version Saleae__Automation__Version;
typedef struct Saleae__Automation__AppInfo Saleae__Automation__AppInfo;
typedef struct Saleae__Automation__Device Saleae__Automation__Device;
typedef struct Saleae__Automation__LogicChannels Saleae__Automation__LogicChannels;
typedef struct Saleae__Automation__CaptureInfo Saleae__Automation__CaptureInfo;
typedef struct Saleae__Automation__LogicDeviceConfiguration Saleae__Automation__LogicDeviceConfiguration;
typedef struct Saleae__Automation__GlitchFilterEntry Saleae__Automation__GlitchFilterEntry;
typedef struct Saleae__Automation__ManualCaptureMode Saleae__Automation__ManualCaptureMode;
typedef struct Saleae__Automation__TimedCaptureMode Saleae__Automation__TimedCaptureMode;
typedef struct Saleae__Automation__DigitalTriggerLinkedChannel Saleae__Automation__DigitalTriggerLinkedChannel;
typedef struct Saleae__Automation__DigitalTriggerCaptureMode Saleae__Automation__DigitalTriggerCaptureMode;
typedef struct Saleae__Automation__CaptureConfiguration Saleae__Automation__CaptureConfiguration;
typedef struct Saleae__Automation__GetDevicesRequest Saleae__Automation__GetDevicesRequest;
typedef struct Saleae__Automation__GetDevicesReply Saleae__Automation__GetDevicesReply;
typedef struct Saleae__Automation__StartCaptureRequest Saleae__Automation__StartCaptureRequest;
typedef struct Saleae__Automation__StartCaptureReply Saleae__Automation__StartCaptureReply;
typedef struct Saleae__Automation__StopCaptureRequest Saleae__Automation__StopCaptureRequest;
typedef struct Saleae__Automation__StopCaptureReply Saleae__Automation__StopCaptureReply;
typedef struct Saleae__Automation__WaitCaptureRequest Saleae__Automation__WaitCaptureRequest;
typedef struct Saleae__Automation__WaitCaptureReply Saleae__Automation__WaitCaptureReply;
typedef struct Saleae__Automation__LoadCaptureRequest Saleae__Automation__LoadCaptureRequest;
typedef struct Saleae__Automation__LoadCaptureReply Saleae__Automation__LoadCaptureReply;
typedef struct Saleae__Automation__SaveCaptureRequest Saleae__Automation__SaveCaptureRequest;
typedef struct Saleae__Automation__SaveCaptureReply Saleae__Automation__SaveCaptureReply;
typedef struct Saleae__Automation__CloseCaptureRequest Saleae__Automation__CloseCaptureRequest;
typedef struct Saleae__Automation__CloseCaptureReply Saleae__Automation__CloseCaptureReply;
typedef struct Saleae__Automation__ExportRawDataCsvRequest Saleae__Automation__ExportRawDataCsvRequest;
typedef struct Saleae__Automation__ExportRawDataCsvReply Saleae__Automation__ExportRawDataCsvReply;
typedef struct Saleae__Automation__ExportRawDataBinaryRequest Saleae__Automation__ExportRawDataBinaryRequest;
typedef struct Saleae__Automation__ExportRawDataBinaryReply Saleae__Automation__ExportRawDataBinaryReply;
typedef struct Saleae__Automation__AnalyzerSettingValue Saleae__Automation__AnalyzerSettingValue;
typedef struct Saleae__Automation__AddAnalyzerRequest Saleae__Automation__AddAnalyzerRequest;
typedef struct Saleae__Automation__AddAnalyzerRequest__SettingsEntry Saleae__Automation__AddAnalyzerRequest__SettingsEntry;
typedef struct Saleae__Automation__AddAnalyzerReply Saleae__Automation__AddAnalyzerReply;
typedef struct Saleae__Automation__RemoveAnalyzerRequest Saleae__Automation__RemoveAnalyzerRequest;
typedef struct Saleae__Automation__RemoveAnalyzerReply Saleae__Automation__RemoveAnalyzerReply;
typedef struct Saleae__Automation__HighLevelAnalyzerSettingValue Saleae__Automation__HighLevelAnalyzerSettingValue;
typedef struct Saleae__Automation__AddHighLevelAnalyzerRequest Saleae__Automation__AddHighLevelAnalyzerRequest;
typedef struct Saleae__Automation__AddHighLevelAnalyzerRequest__SettingsEntry Saleae__Automation__AddHighLevelAnalyzerRequest__SettingsEntry;
typedef struct Saleae__Automation__AddHighLevelAnalyzerReply Saleae__Automation__AddHighLevelAnalyzerReply;
typedef struct Saleae__Automation__RemoveHighLevelAnalyzerRequest Saleae__Automation__RemoveHighLevelAnalyzerRequest;
typedef struct Saleae__Automation__RemoveHighLevelAnalyzerReply Saleae__Automation__RemoveHighLevelAnalyzerReply;
typedef struct Saleae__Automation__DataTableAnalyzerConfiguration Saleae__Automation__DataTableAnalyzerConfiguration;
typedef struct Saleae__Automation__DataTableFilter Saleae__Automation__DataTableFilter;
typedef struct Saleae__Automation__ExportDataTableCsvRequest Saleae__Automation__ExportDataTableCsvRequest;
typedef struct Saleae__Automation__ExportDataTableCsvReply Saleae__Automation__ExportDataTableCsvReply;
typedef struct Saleae__Automation__LegacyExportAnalyzerRequest Saleae__Automation__LegacyExportAnalyzerRequest;
typedef struct Saleae__Automation__LegacyExportAnalyzerReply Saleae__Automation__LegacyExportAnalyzerReply;
typedef struct Saleae__Automation__GetAppInfoRequest Saleae__Automation__GetAppInfoRequest;
typedef struct Saleae__Automation__GetAppInfoReply Saleae__Automation__GetAppInfoReply;


/* --- enums --- */

/*
 * This enum is not used in any messages. It is here to version this .proto file, and make it accessible to
 * users of this .proto file. Please see the automation API documentation for more info on
 * versioning (link at top of file).
 */
typedef enum _Saleae__Automation__ThisApiVersion {
  /*
   * ZERO value here to appease protobuf - the first enum value must be zero.
   */
  SALEAE__AUTOMATION__THIS_API_VERSION__THIS_API_VERSION_ZERO = 0,
  SALEAE__AUTOMATION__THIS_API_VERSION__THIS_API_VERSION_MAJOR = 1,
  SALEAE__AUTOMATION__THIS_API_VERSION__THIS_API_VERSION_MINOR = 0,
  SALEAE__AUTOMATION__THIS_API_VERSION__THIS_API_VERSION_PATCH = 0
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SALEAE__AUTOMATION__THIS_API_VERSION)
} Saleae__Automation__ThisApiVersion;
typedef enum _Saleae__Automation__ErrorCode {
  /*
   * Not used
   */
  SALEAE__AUTOMATION__ERROR_CODE__ERROR_CODE_UNSPECIFIED = 0,
  /*
   * Unexpected Saleae Internal Error.
   */
  SALEAE__AUTOMATION__ERROR_CODE__ERROR_CODE_INTERNAL_EXCEPTION = 1,
  /*
   * Request is invalid, usually because of invalid arguments.
   * Examples:
   *     Invalid Capture Id - capture does not exist
   *     Missing filepath
   */
  SALEAE__AUTOMATION__ERROR_CODE__ERROR_CODE_INVALID_REQUEST = 10,
  /*
   * Loading the capture failed
   */
  SALEAE__AUTOMATION__ERROR_CODE__ERROR_CODE_LOAD_CAPTURE_FAILED = 20,
  /*
   * Export failed
   */
  SALEAE__AUTOMATION__ERROR_CODE__ERROR_CODE_EXPORT_FAILED = 21,
  /*
   * The specified device id does not exist
   */
  SALEAE__AUTOMATION__ERROR_CODE__ERROR_CODE_MISSING_DEVICE = 50,
  /*
   * There was a device error during the capture
   */
  SALEAE__AUTOMATION__ERROR_CODE__ERROR_CODE_DEVICE_ERROR = 51,
  /*
   * Ran out of memory during capture
   */
  SALEAE__AUTOMATION__ERROR_CODE__ERROR_CODE_OUT_OF_MEMORY = 52
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SALEAE__AUTOMATION__ERROR_CODE)
} Saleae__Automation__ErrorCode;
typedef enum _Saleae__Automation__RadixType {
  SALEAE__AUTOMATION__RADIX_TYPE__RADIX_TYPE_UNSPECIFIED = 0,
  SALEAE__AUTOMATION__RADIX_TYPE__RADIX_TYPE_BINARY = 1,
  SALEAE__AUTOMATION__RADIX_TYPE__RADIX_TYPE_DECIMAL = 2,
  SALEAE__AUTOMATION__RADIX_TYPE__RADIX_TYPE_HEXADECIMAL = 3,
  SALEAE__AUTOMATION__RADIX_TYPE__RADIX_TYPE_ASCII = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SALEAE__AUTOMATION__RADIX_TYPE)
} Saleae__Automation__RadixType;
typedef enum _Saleae__Automation__DeviceType {
  /*
   * Invalid Device Type
   */
  SALEAE__AUTOMATION__DEVICE_TYPE__DEVICE_TYPE_UNSPECIFIED = 0,
  /*
   * Saleae Logic - NOT SUPPORTED
   */
  SALEAE__AUTOMATION__DEVICE_TYPE__DEVICE_TYPE_LOGIC = 1,
  /*
   * Saleae Logic 4 - NOT SUPPORTED
   */
  SALEAE__AUTOMATION__DEVICE_TYPE__DEVICE_TYPE_LOGIC_4 = 2,
  /*
   * Saleae Logic 8
   */
  SALEAE__AUTOMATION__DEVICE_TYPE__DEVICE_TYPE_LOGIC_8 = 3,
  /*
   * Saleae Logic 16  - NOT SUPPORTED
   */
  SALEAE__AUTOMATION__DEVICE_TYPE__DEVICE_TYPE_LOGIC_16 = 4,
  /*
   * Saleae Logic Pro 8
   */
  SALEAE__AUTOMATION__DEVICE_TYPE__DEVICE_TYPE_LOGIC_PRO_8 = 5,
  /*
   * Saleae Logic Pro 16
   */
  SALEAE__AUTOMATION__DEVICE_TYPE__DEVICE_TYPE_LOGIC_PRO_16 = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SALEAE__AUTOMATION__DEVICE_TYPE)
} Saleae__Automation__DeviceType;
typedef enum _Saleae__Automation__ChannelType {
  SALEAE__AUTOMATION__CHANNEL_TYPE__CHANNEL_TYPE_UNSPECIFIED = 0,
  /*
   * Digial channel
   */
  SALEAE__AUTOMATION__CHANNEL_TYPE__CHANNEL_TYPE_DIGITAL = 1,
  /*
   * Analog channel
   */
  SALEAE__AUTOMATION__CHANNEL_TYPE__CHANNEL_TYPE_ANALOG = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SALEAE__AUTOMATION__CHANNEL_TYPE)
} Saleae__Automation__ChannelType;
typedef enum _Saleae__Automation__DigitalTriggerType {
  SALEAE__AUTOMATION__DIGITAL_TRIGGER_TYPE__DIGITAL_TRIGGER_TYPE_UNSPECIFIED = 0,
  /*
   * Rising edge trigger, from LOW to HIGH
   */
  SALEAE__AUTOMATION__DIGITAL_TRIGGER_TYPE__DIGITAL_TRIGGER_TYPE_RISING = 1,
  /*
   * Falling edge trigger, from HIGH to LOW
   */
  SALEAE__AUTOMATION__DIGITAL_TRIGGER_TYPE__DIGITAL_TRIGGER_TYPE_FALLING = 2,
  /*
   * Pulse trigger, with a rising and falling edge
   */
  SALEAE__AUTOMATION__DIGITAL_TRIGGER_TYPE__DIGITAL_TRIGGER_TYPE_PULSE_HIGH = 3,
  /*
   * Pulse trigger, with a falling and rising edge
   */
  SALEAE__AUTOMATION__DIGITAL_TRIGGER_TYPE__DIGITAL_TRIGGER_TYPE_PULSE_LOW = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SALEAE__AUTOMATION__DIGITAL_TRIGGER_TYPE)
} Saleae__Automation__DigitalTriggerType;
typedef enum _Saleae__Automation__DigitalTriggerLinkedChannelState {
  SALEAE__AUTOMATION__DIGITAL_TRIGGER_LINKED_CHANNEL_STATE__DIGITAL_TRIGGER_LINKED_CHANNEL_STATE_UNSPECIFIED = 0,
  /*
   * The linked channel must be LOW
   */
  SALEAE__AUTOMATION__DIGITAL_TRIGGER_LINKED_CHANNEL_STATE__DIGITAL_TRIGGER_LINKED_CHANNEL_STATE_LOW = 1,
  /*
   * The linked channel must be HIGH
   */
  SALEAE__AUTOMATION__DIGITAL_TRIGGER_LINKED_CHANNEL_STATE__DIGITAL_TRIGGER_LINKED_CHANNEL_STATE_HIGH = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SALEAE__AUTOMATION__DIGITAL_TRIGGER_LINKED_CHANNEL_STATE)
} Saleae__Automation__DigitalTriggerLinkedChannelState;

/* --- messages --- */

struct  Saleae__Automation__Version
{
  ProtobufCMessage base;
  uint32_t major;
  uint32_t minor;
  uint32_t patch;
};
#define SALEAE__AUTOMATION__VERSION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__version__descriptor) \
    , 0, 0, 0 }


/*
 * Application version info for the
 */
struct  Saleae__Automation__AppInfo
{
  ProtobufCMessage base;
  /*
   * The version of .proto that Logic 2 is using.
   */
  Saleae__Automation__Version *api_version;
  /*
   * Logic 2 Application Version
   */
  char *application_version;
  /*
   * Process ID of the main Logic 2 process
   */
  uint64_t launch_pid;
};
#define SALEAE__AUTOMATION__APP_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__app_info__descriptor) \
    , NULL, (char *)protobuf_c_empty_string, 0 }


/*
 * Device descriptor object.
 */
struct  Saleae__Automation__Device
{
  ProtobufCMessage base;
  /*
   * The device id of this device
   */
  char *device_id;
  /*
   * The type of this device
   */
  Saleae__Automation__DeviceType device_type;
  /*
   * True if this is a simulation device
   */
  protobuf_c_boolean is_simulation;
};
#define SALEAE__AUTOMATION__DEVICE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__device__descriptor) \
    , (char *)protobuf_c_empty_string, SALEAE__AUTOMATION__DEVICE_TYPE__DEVICE_TYPE_UNSPECIFIED, 0 }


struct  Saleae__Automation__LogicChannels
{
  ProtobufCMessage base;
  /*
   * Indices of Digital Channels, starting from 0
   */
  size_t n_digital_channels;
  uint32_t *digital_channels;
  /*
   * Indices of Analog Channels, starting from 0
   */
  size_t n_analog_channels;
  uint32_t *analog_channels;
};
#define SALEAE__AUTOMATION__LOGIC_CHANNELS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__logic_channels__descriptor) \
    , 0,NULL, 0,NULL }


struct  Saleae__Automation__CaptureInfo
{
  ProtobufCMessage base;
  /*
   * Id of the capture.
   */
  uint64_t capture_id;
};
#define SALEAE__AUTOMATION__CAPTURE_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__capture_info__descriptor) \
    , 0 }


typedef enum {
  SALEAE__AUTOMATION__LOGIC_DEVICE_CONFIGURATION__ENABLED_CHANNELS__NOT_SET = 0,
  SALEAE__AUTOMATION__LOGIC_DEVICE_CONFIGURATION__ENABLED_CHANNELS_LOGIC_CHANNELS = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SALEAE__AUTOMATION__LOGIC_DEVICE_CONFIGURATION__ENABLED_CHANNELS__CASE)
} Saleae__Automation__LogicDeviceConfiguration__EnabledChannelsCase;

struct  Saleae__Automation__LogicDeviceConfiguration
{
  ProtobufCMessage base;
  /*
   * Digital Sample Rate (samples per second)
   */
  uint32_t digital_sample_rate;
  /*
   * Analog Sample Rate (samples per second)
   */
  uint32_t analog_sample_rate;
  /*
   * For Pro 8 and Pro 16, this can be one of: 1.2, 1.8, or 3.3
   * For other devices this is ignored
   */
  double digital_threshold_volts;
  /*
   * Glitch filter to apply to digital data
   * See https://support.saleae.com/user-guide/using-logic/software-glitch-filter for more information
   */
  size_t n_glitch_filters;
  Saleae__Automation__GlitchFilterEntry **glitch_filters;
  Saleae__Automation__LogicDeviceConfiguration__EnabledChannelsCase enabled_channels_case;
  union {
    Saleae__Automation__LogicChannels *logic_channels;
  };
};
#define SALEAE__AUTOMATION__LOGIC_DEVICE_CONFIGURATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__logic_device_configuration__descriptor) \
    , 0, 0, 0, 0,NULL, SALEAE__AUTOMATION__LOGIC_DEVICE_CONFIGURATION__ENABLED_CHANNELS__NOT_SET, {0} }


struct  Saleae__Automation__GlitchFilterEntry
{
  ProtobufCMessage base;
  /*
   * Channel index
   */
  uint32_t channel_index;
  /*
   * Minimum pulse width, in seconds
   */
  double pulse_width_seconds;
};
#define SALEAE__AUTOMATION__GLITCH_FILTER_ENTRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__glitch_filter_entry__descriptor) \
    , 0, 0 }


/*
 * When in manual capture mode, the capture must be manually stopped using the StopCapture request.
 */
struct  Saleae__Automation__ManualCaptureMode
{
  ProtobufCMessage base;
  /*
   * Number of seconds to keep after the capture ends.
   * If greater than 0, only the latest `trim_data_seconds` of the capture will be kept, otherwise the data will not be trimmed.
   */
  double trim_data_seconds;
};
#define SALEAE__AUTOMATION__MANUAL_CAPTURE_MODE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__manual_capture_mode__descriptor) \
    , 0 }


/*
 * When in timed capture mode, the capture will automatically stop after `duration_seconds`.
 * If `trim_data_seconds` is 
 */
struct  Saleae__Automation__TimedCaptureMode
{
  ProtobufCMessage base;
  /*
   * Seconds of data to capture
   */
  double duration_seconds;
  /*
   * Number of seconds to keep after the capture ends.
   * If greater than 0, only the latest `trim_data_seconds` of the capture will be kept, otherwise the data will not be trimmed.
   */
  double trim_data_seconds;
};
#define SALEAE__AUTOMATION__TIMED_CAPTURE_MODE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__timed_capture_mode__descriptor) \
    , 0, 0 }


struct  Saleae__Automation__DigitalTriggerLinkedChannel
{
  ProtobufCMessage base;
  /*
   * Channel to link to
   */
  uint32_t channel_index;
  /*
   * Expected state of channel at trigger
   */
  Saleae__Automation__DigitalTriggerLinkedChannelState state;
};
#define SALEAE__AUTOMATION__DIGITAL_TRIGGER_LINKED_CHANNEL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__digital_trigger_linked_channel__descriptor) \
    , 0, SALEAE__AUTOMATION__DIGITAL_TRIGGER_LINKED_CHANNEL_STATE__DIGITAL_TRIGGER_LINKED_CHANNEL_STATE_UNSPECIFIED }


/*
 * When in digital trigger capture mode, the capture will automatically stop when the specified digital condition
 * has been met.
 */
struct  Saleae__Automation__DigitalTriggerCaptureMode
{
  ProtobufCMessage base;
  /*
   * Type of trigger
   */
  Saleae__Automation__DigitalTriggerType trigger_type;
  /*
   * Number of seconds to continue capturing after trigger
   */
  double after_trigger_seconds;
  /*
   * Number of seconds to keep after the capture ends.
   * If greater than 0, only the latest `trim_data_seconds` of the capture will be kept, otherwise the data will not be trimmed.
   */
  double trim_data_seconds;
  /*
   * Index of channel to search for `trigger_type`
   */
  uint32_t trigger_channel_index;
  /*
   * Minimum pulse width to trigger on, in seconds (only applies when trigger_type is a pulse trigger type)
   */
  double min_pulse_width_seconds;
  /*
   * Maximum pulse width to trigger on, in seconds (only applies when trigger_type is a pulse trigger type)
   */
  double max_pulse_width_seconds;
  /*
   * Conditions on other digital channels that must be met in order to meet the trigger condition
   * For an edge trigger, the linked channel must be in the specified state at when the trigger edge occurs.
   * For a pulse trigger, the linked channel must be in the specified state for the duration of the pulse.
   */
  size_t n_linked_channels;
  Saleae__Automation__DigitalTriggerLinkedChannel **linked_channels;
};
#define SALEAE__AUTOMATION__DIGITAL_TRIGGER_CAPTURE_MODE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__digital_trigger_capture_mode__descriptor) \
    , SALEAE__AUTOMATION__DIGITAL_TRIGGER_TYPE__DIGITAL_TRIGGER_TYPE_UNSPECIFIED, 0, 0, 0, 0, 0, 0,NULL }


typedef enum {
  SALEAE__AUTOMATION__CAPTURE_CONFIGURATION__CAPTURE_MODE__NOT_SET = 0,
  SALEAE__AUTOMATION__CAPTURE_CONFIGURATION__CAPTURE_MODE_MANUAL_CAPTURE_MODE = 2,
  SALEAE__AUTOMATION__CAPTURE_CONFIGURATION__CAPTURE_MODE_TIMED_CAPTURE_MODE = 3,
  SALEAE__AUTOMATION__CAPTURE_CONFIGURATION__CAPTURE_MODE_DIGITAL_CAPTURE_MODE = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SALEAE__AUTOMATION__CAPTURE_CONFIGURATION__CAPTURE_MODE__CASE)
} Saleae__Automation__CaptureConfiguration__CaptureModeCase;

struct  Saleae__Automation__CaptureConfiguration
{
  ProtobufCMessage base;
  /*
   * Capture buffer size
   * This is the maximum number of megabytes allowed for storing data during a capture.
   * When this limit is reached, what happens depends on the capture mode:
   *   Manual - the oldest data will be deleted until the total usage is under buffer_size_megabytes
   *   Timer - the capture will be terminated
   *   DigitalTriggerCapture - the capture will be terminated
   */
  uint32_t buffer_size_megabytes;
  Saleae__Automation__CaptureConfiguration__CaptureModeCase capture_mode_case;
  union {
    Saleae__Automation__ManualCaptureMode *manual_capture_mode;
    Saleae__Automation__TimedCaptureMode *timed_capture_mode;
    Saleae__Automation__DigitalTriggerCaptureMode *digital_capture_mode;
  };
};
#define SALEAE__AUTOMATION__CAPTURE_CONFIGURATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__capture_configuration__descriptor) \
    , 0, SALEAE__AUTOMATION__CAPTURE_CONFIGURATION__CAPTURE_MODE__NOT_SET, {0} }


struct  Saleae__Automation__GetDevicesRequest
{
  ProtobufCMessage base;
  /*
   * If true, simulation devices will be included in the response
   */
  protobuf_c_boolean include_simulation_devices;
};
#define SALEAE__AUTOMATION__GET_DEVICES_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__get_devices_request__descriptor) \
    , 0 }


struct  Saleae__Automation__GetDevicesReply
{
  ProtobufCMessage base;
  size_t n_devices;
  Saleae__Automation__Device **devices;
};
#define SALEAE__AUTOMATION__GET_DEVICES_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__get_devices_reply__descriptor) \
    , 0,NULL }


typedef enum {
  SALEAE__AUTOMATION__START_CAPTURE_REQUEST__DEVICE_CONFIGURATION__NOT_SET = 0,
  SALEAE__AUTOMATION__START_CAPTURE_REQUEST__DEVICE_CONFIGURATION_LOGIC_DEVICE_CONFIGURATION = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SALEAE__AUTOMATION__START_CAPTURE_REQUEST__DEVICE_CONFIGURATION__CASE)
} Saleae__Automation__StartCaptureRequest__DeviceConfigurationCase;

/*
 * Start Capture
 */
struct  Saleae__Automation__StartCaptureRequest
{
  ProtobufCMessage base;
  /*
   * Device id of device to capture with.
   * If a device id is not specified, the first physical device will be used.
   * If no physical device is connected, an error will be returned.
   */
  char *device_id;
  Saleae__Automation__CaptureConfiguration *capture_configuration;
  Saleae__Automation__StartCaptureRequest__DeviceConfigurationCase device_configuration_case;
  union {
    Saleae__Automation__LogicDeviceConfiguration *logic_device_configuration;
  };
};
#define SALEAE__AUTOMATION__START_CAPTURE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__start_capture_request__descriptor) \
    , (char *)protobuf_c_empty_string, NULL, SALEAE__AUTOMATION__START_CAPTURE_REQUEST__DEVICE_CONFIGURATION__NOT_SET, {0} }


struct  Saleae__Automation__StartCaptureReply
{
  ProtobufCMessage base;
  Saleae__Automation__CaptureInfo *capture_info;
};
#define SALEAE__AUTOMATION__START_CAPTURE_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__start_capture_reply__descriptor) \
    , NULL }


/*
 * Stop Capture
 * If the capture is running, this will stop the capture, otherwise it will do nothing.
 */
struct  Saleae__Automation__StopCaptureRequest
{
  ProtobufCMessage base;
  uint64_t capture_id;
};
#define SALEAE__AUTOMATION__STOP_CAPTURE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__stop_capture_request__descriptor) \
    , 0 }


struct  Saleae__Automation__StopCaptureReply
{
  ProtobufCMessage base;
};
#define SALEAE__AUTOMATION__STOP_CAPTURE_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__stop_capture_reply__descriptor) \
     }


/*
 * Wait Capture
 * If the capture is running, this will wait for the capture to end, otherwise it will do nothing.
 * This should not be used with ManualCaptureMode. It requires that the capture ends on its own.
 */
struct  Saleae__Automation__WaitCaptureRequest
{
  ProtobufCMessage base;
  uint64_t capture_id;
};
#define SALEAE__AUTOMATION__WAIT_CAPTURE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__wait_capture_request__descriptor) \
    , 0 }


struct  Saleae__Automation__WaitCaptureReply
{
  ProtobufCMessage base;
};
#define SALEAE__AUTOMATION__WAIT_CAPTURE_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__wait_capture_reply__descriptor) \
     }


struct  Saleae__Automation__LoadCaptureRequest
{
  ProtobufCMessage base;
  /*
   * Absolute filepath of Logic 2 .sal capture file to load.
   */
  char *filepath;
};
#define SALEAE__AUTOMATION__LOAD_CAPTURE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__load_capture_request__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  Saleae__Automation__LoadCaptureReply
{
  ProtobufCMessage base;
  /*
   * Information about the capture that was loaded.
   */
  Saleae__Automation__CaptureInfo *capture_info;
};
#define SALEAE__AUTOMATION__LOAD_CAPTURE_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__load_capture_reply__descriptor) \
    , NULL }


struct  Saleae__Automation__SaveCaptureRequest
{
  ProtobufCMessage base;
  /*
   * Id of capture to save.
   */
  uint64_t capture_id;
  /*
   * Absolute filepath to save the file to, usually ending in ".sal".
   * The save file will be exactly as specified, and will _NOT_ have ".sal" appended to it.
   */
  char *filepath;
};
#define SALEAE__AUTOMATION__SAVE_CAPTURE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__save_capture_request__descriptor) \
    , 0, (char *)protobuf_c_empty_string }


struct  Saleae__Automation__SaveCaptureReply
{
  ProtobufCMessage base;
};
#define SALEAE__AUTOMATION__SAVE_CAPTURE_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__save_capture_reply__descriptor) \
     }


struct  Saleae__Automation__CloseCaptureRequest
{
  ProtobufCMessage base;
  /*
   * Id of capture to close.
   */
  uint64_t capture_id;
};
#define SALEAE__AUTOMATION__CLOSE_CAPTURE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__close_capture_request__descriptor) \
    , 0 }


struct  Saleae__Automation__CloseCaptureReply
{
  ProtobufCMessage base;
};
#define SALEAE__AUTOMATION__CLOSE_CAPTURE_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__close_capture_reply__descriptor) \
     }


typedef enum {
  SALEAE__AUTOMATION__EXPORT_RAW_DATA_CSV_REQUEST__CHANNELS__NOT_SET = 0,
  SALEAE__AUTOMATION__EXPORT_RAW_DATA_CSV_REQUEST__CHANNELS_LOGIC_CHANNELS = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SALEAE__AUTOMATION__EXPORT_RAW_DATA_CSV_REQUEST__CHANNELS__CASE)
} Saleae__Automation__ExportRawDataCsvRequest__ChannelsCase;

struct  Saleae__Automation__ExportRawDataCsvRequest
{
  ProtobufCMessage base;
  /*
   * Id of capture to export data from.
   */
  uint64_t capture_id;
  /*
   * Directory to create exported CSV files in.
   */
  char *directory;
  /*
   * Must be between 1 and 1,000,000, inclusive.
   */
  uint64_t analog_downsample_ratio;
  /*
   * If true, timestamps will be in ISO8601 format.
   */
  protobuf_c_boolean iso8601_timestamp;
  Saleae__Automation__ExportRawDataCsvRequest__ChannelsCase channels_case;
  union {
    Saleae__Automation__LogicChannels *logic_channels;
  };
};
#define SALEAE__AUTOMATION__EXPORT_RAW_DATA_CSV_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__export_raw_data_csv_request__descriptor) \
    , 0, (char *)protobuf_c_empty_string, 0, 0, SALEAE__AUTOMATION__EXPORT_RAW_DATA_CSV_REQUEST__CHANNELS__NOT_SET, {0} }


struct  Saleae__Automation__ExportRawDataCsvReply
{
  ProtobufCMessage base;
};
#define SALEAE__AUTOMATION__EXPORT_RAW_DATA_CSV_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__export_raw_data_csv_reply__descriptor) \
     }


typedef enum {
  SALEAE__AUTOMATION__EXPORT_RAW_DATA_BINARY_REQUEST__CHANNELS__NOT_SET = 0,
  SALEAE__AUTOMATION__EXPORT_RAW_DATA_BINARY_REQUEST__CHANNELS_LOGIC_CHANNELS = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SALEAE__AUTOMATION__EXPORT_RAW_DATA_BINARY_REQUEST__CHANNELS__CASE)
} Saleae__Automation__ExportRawDataBinaryRequest__ChannelsCase;

struct  Saleae__Automation__ExportRawDataBinaryRequest
{
  ProtobufCMessage base;
  /*
   * Id of capture to export data from.
   */
  uint64_t capture_id;
  /*
   * Directory to create exported binary files in.
   */
  char *directory;
  /*
   * Must be between 1 and 1,000,000, inclusive.
   */
  uint64_t analog_downsample_ratio;
  Saleae__Automation__ExportRawDataBinaryRequest__ChannelsCase channels_case;
  union {
    Saleae__Automation__LogicChannels *logic_channels;
  };
};
#define SALEAE__AUTOMATION__EXPORT_RAW_DATA_BINARY_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__export_raw_data_binary_request__descriptor) \
    , 0, (char *)protobuf_c_empty_string, 0, SALEAE__AUTOMATION__EXPORT_RAW_DATA_BINARY_REQUEST__CHANNELS__NOT_SET, {0} }


struct  Saleae__Automation__ExportRawDataBinaryReply
{
  ProtobufCMessage base;
};
#define SALEAE__AUTOMATION__EXPORT_RAW_DATA_BINARY_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__export_raw_data_binary_reply__descriptor) \
     }


typedef enum {
  SALEAE__AUTOMATION__ANALYZER_SETTING_VALUE__VALUE__NOT_SET = 0,
  SALEAE__AUTOMATION__ANALYZER_SETTING_VALUE__VALUE_STRING_VALUE = 1,
  SALEAE__AUTOMATION__ANALYZER_SETTING_VALUE__VALUE_INT64_VALUE = 2,
  SALEAE__AUTOMATION__ANALYZER_SETTING_VALUE__VALUE_BOOL_VALUE = 3,
  SALEAE__AUTOMATION__ANALYZER_SETTING_VALUE__VALUE_DOUBLE_VALUE = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SALEAE__AUTOMATION__ANALYZER_SETTING_VALUE__VALUE__CASE)
} Saleae__Automation__AnalyzerSettingValue__ValueCase;

struct  Saleae__Automation__AnalyzerSettingValue
{
  ProtobufCMessage base;
  Saleae__Automation__AnalyzerSettingValue__ValueCase value_case;
  union {
    /*
     * String value
     */
    char *string_value;
    /*
     * Integer value
     */
    int64_t int64_value;
    /*
     * Boolean value
     */
    protobuf_c_boolean bool_value;
    /*
     * Double floating-point value
     */
    double double_value;
  };
};
#define SALEAE__AUTOMATION__ANALYZER_SETTING_VALUE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__analyzer_setting_value__descriptor) \
    , SALEAE__AUTOMATION__ANALYZER_SETTING_VALUE__VALUE__NOT_SET, {0} }


struct  Saleae__Automation__AddAnalyzerRequest__SettingsEntry
{
  ProtobufCMessage base;
  char *key;
  Saleae__Automation__AnalyzerSettingValue *value;
};
#define SALEAE__AUTOMATION__ADD_ANALYZER_REQUEST__SETTINGS_ENTRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__add_analyzer_request__settings_entry__descriptor) \
    , (char *)protobuf_c_empty_string, NULL }


struct  Saleae__Automation__AddAnalyzerRequest
{
  ProtobufCMessage base;
  /*
   * Id of capture to add analyzer to.
   */
  uint64_t capture_id;
  /*
   * Name of analyzer. This should exactly match the name seen in the
   * application. Examples: "SPI", "I2C", "Async Serial"
   */
  char *analyzer_name;
  /*
   * User-facing name for the analyzer.
   */
  char *analyzer_label;
  /*
   * Analyzer settings. These should match the names shown in analyzer's
   * settings shown in the application.
   */
  size_t n_settings;
  Saleae__Automation__AddAnalyzerRequest__SettingsEntry **settings;
};
#define SALEAE__AUTOMATION__ADD_ANALYZER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__add_analyzer_request__descriptor) \
    , 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0,NULL }


struct  Saleae__Automation__AddAnalyzerReply
{
  ProtobufCMessage base;
  /*
   * Id of the newly created analyzer.
   */
  uint64_t analyzer_id;
};
#define SALEAE__AUTOMATION__ADD_ANALYZER_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__add_analyzer_reply__descriptor) \
    , 0 }


struct  Saleae__Automation__RemoveAnalyzerRequest
{
  ProtobufCMessage base;
  /*
   * Id of capture to remove analyzer from.
   */
  uint64_t capture_id;
  /*
   * Id of analyzer to remove.
   */
  uint64_t analyzer_id;
};
#define SALEAE__AUTOMATION__REMOVE_ANALYZER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__remove_analyzer_request__descriptor) \
    , 0, 0 }


struct  Saleae__Automation__RemoveAnalyzerReply
{
  ProtobufCMessage base;
};
#define SALEAE__AUTOMATION__REMOVE_ANALYZER_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__remove_analyzer_reply__descriptor) \
     }


typedef enum {
  SALEAE__AUTOMATION__HIGH_LEVEL_ANALYZER_SETTING_VALUE__VALUE__NOT_SET = 0,
  SALEAE__AUTOMATION__HIGH_LEVEL_ANALYZER_SETTING_VALUE__VALUE_STRING_VALUE = 1,
  SALEAE__AUTOMATION__HIGH_LEVEL_ANALYZER_SETTING_VALUE__VALUE_NUMBER_VALUE = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SALEAE__AUTOMATION__HIGH_LEVEL_ANALYZER_SETTING_VALUE__VALUE__CASE)
} Saleae__Automation__HighLevelAnalyzerSettingValue__ValueCase;

struct  Saleae__Automation__HighLevelAnalyzerSettingValue
{
  ProtobufCMessage base;
  Saleae__Automation__HighLevelAnalyzerSettingValue__ValueCase value_case;
  union {
    /*
     * String value
     */
    char *string_value;
    /*
     * Double-precision floating point value
     */
    double number_value;
  };
};
#define SALEAE__AUTOMATION__HIGH_LEVEL_ANALYZER_SETTING_VALUE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__high_level_analyzer_setting_value__descriptor) \
    , SALEAE__AUTOMATION__HIGH_LEVEL_ANALYZER_SETTING_VALUE__VALUE__NOT_SET, {0} }


struct  Saleae__Automation__AddHighLevelAnalyzerRequest__SettingsEntry
{
  ProtobufCMessage base;
  char *key;
  Saleae__Automation__HighLevelAnalyzerSettingValue *value;
};
#define SALEAE__AUTOMATION__ADD_HIGH_LEVEL_ANALYZER_REQUEST__SETTINGS_ENTRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__add_high_level_analyzer_request__settings_entry__descriptor) \
    , (char *)protobuf_c_empty_string, NULL }


struct  Saleae__Automation__AddHighLevelAnalyzerRequest
{
  ProtobufCMessage base;
  /*
   * Id of capture to add analyzer to.
   */
  uint64_t capture_id;
  /*
   * The path to the extension directory containing the HLA
   * Note: The extension directory is the directory that contains `extension.json`
   */
  char *extension_directory;
  /*
   * The name of the HLA to use, as listed in `extension.json`
   */
  char *hla_name;
  /*
   * User-facing name for the HLA.
   */
  char *hla_label;
  /*
   * Id of analyzer to use as input to this HLA
   */
  uint64_t input_analyzer_id;
  /*
   * Analyzer settings. These should match the names shown in analyzer's
   * settings shown in the application.
   */
  size_t n_settings;
  Saleae__Automation__AddHighLevelAnalyzerRequest__SettingsEntry **settings;
};
#define SALEAE__AUTOMATION__ADD_HIGH_LEVEL_ANALYZER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__add_high_level_analyzer_request__descriptor) \
    , 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, 0,NULL }


struct  Saleae__Automation__AddHighLevelAnalyzerReply
{
  ProtobufCMessage base;
  /*
   * Id of the newly created analyzer.
   */
  uint64_t analyzer_id;
};
#define SALEAE__AUTOMATION__ADD_HIGH_LEVEL_ANALYZER_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__add_high_level_analyzer_reply__descriptor) \
    , 0 }


struct  Saleae__Automation__RemoveHighLevelAnalyzerRequest
{
  ProtobufCMessage base;
  /*
   * Id of capture to remove analyzer from.
   */
  uint64_t capture_id;
  /*
   * Id of high level analyzer to remove.
   */
  uint64_t analyzer_id;
};
#define SALEAE__AUTOMATION__REMOVE_HIGH_LEVEL_ANALYZER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__remove_high_level_analyzer_request__descriptor) \
    , 0, 0 }


struct  Saleae__Automation__RemoveHighLevelAnalyzerReply
{
  ProtobufCMessage base;
};
#define SALEAE__AUTOMATION__REMOVE_HIGH_LEVEL_ANALYZER_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__remove_high_level_analyzer_reply__descriptor) \
     }


struct  Saleae__Automation__DataTableAnalyzerConfiguration
{
  ProtobufCMessage base;
  /*
   * Id of analyzers to export data from.
   */
  uint64_t analyzer_id;
  /*
   * Radix type to use for this analyzer
   */
  Saleae__Automation__RadixType radix_type;
};
#define SALEAE__AUTOMATION__DATA_TABLE_ANALYZER_CONFIGURATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__data_table_analyzer_configuration__descriptor) \
    , 0, SALEAE__AUTOMATION__RADIX_TYPE__RADIX_TYPE_UNSPECIFIED }


struct  Saleae__Automation__DataTableFilter
{
  ProtobufCMessage base;
  /*
   * Query to filter by
   */
  char *query;
  /*
   * Columns to query
   */
  size_t n_columns;
  char **columns;
};
#define SALEAE__AUTOMATION__DATA_TABLE_FILTER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__data_table_filter__descriptor) \
    , (char *)protobuf_c_empty_string, 0,NULL }


struct  Saleae__Automation__ExportDataTableCsvRequest
{
  ProtobufCMessage base;
  /*
   * Id of capture to export data from.
   */
  uint64_t capture_id;
  /*
   * Path to export CSV data to.
   */
  char *filepath;
  /*
   * Id of analyzers to export data from.
   */
  size_t n_analyzers;
  Saleae__Automation__DataTableAnalyzerConfiguration **analyzers;
  /*
   * If true, timestamps will be in ISO8601 format.
   */
  protobuf_c_boolean iso8601_timestamp;
  /*
   * Columns to export. If empty, all columns will be exported.
   */
  size_t n_export_columns;
  char **export_columns;
  Saleae__Automation__DataTableFilter *filter;
};
#define SALEAE__AUTOMATION__EXPORT_DATA_TABLE_CSV_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__export_data_table_csv_request__descriptor) \
    , 0, (char *)protobuf_c_empty_string, 0,NULL, 0, 0,NULL, NULL }


struct  Saleae__Automation__ExportDataTableCsvReply
{
  ProtobufCMessage base;
};
#define SALEAE__AUTOMATION__EXPORT_DATA_TABLE_CSV_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__export_data_table_csv_reply__descriptor) \
     }


struct  Saleae__Automation__LegacyExportAnalyzerRequest
{
  ProtobufCMessage base;
  /*
   * Id of capture to export data from.
   */
  uint64_t capture_id;
  /*
   * Path to export data to.
   */
  char *filepath;
  /*
   * Id of analyzer to export data from.
   */
  uint64_t analyzer_id;
  /*
   * Radix to use for exported data.
   */
  Saleae__Automation__RadixType radix_type;
};
#define SALEAE__AUTOMATION__LEGACY_EXPORT_ANALYZER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__legacy_export_analyzer_request__descriptor) \
    , 0, (char *)protobuf_c_empty_string, 0, SALEAE__AUTOMATION__RADIX_TYPE__RADIX_TYPE_UNSPECIFIED }


struct  Saleae__Automation__LegacyExportAnalyzerReply
{
  ProtobufCMessage base;
};
#define SALEAE__AUTOMATION__LEGACY_EXPORT_ANALYZER_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__legacy_export_analyzer_reply__descriptor) \
     }


struct  Saleae__Automation__GetAppInfoRequest
{
  ProtobufCMessage base;
};
#define SALEAE__AUTOMATION__GET_APP_INFO_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__get_app_info_request__descriptor) \
     }


struct  Saleae__Automation__GetAppInfoReply
{
  ProtobufCMessage base;
  Saleae__Automation__AppInfo *app_info;
};
#define SALEAE__AUTOMATION__GET_APP_INFO_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&saleae__automation__get_app_info_reply__descriptor) \
    , NULL }


/* Saleae__Automation__Version methods */
void   saleae__automation__version__init
                     (Saleae__Automation__Version         *message);
size_t saleae__automation__version__get_packed_size
                     (const Saleae__Automation__Version   *message);
size_t saleae__automation__version__pack
                     (const Saleae__Automation__Version   *message,
                      uint8_t             *out);
size_t saleae__automation__version__pack_to_buffer
                     (const Saleae__Automation__Version   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__Version *
       saleae__automation__version__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__version__free_unpacked
                     (Saleae__Automation__Version *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__AppInfo methods */
void   saleae__automation__app_info__init
                     (Saleae__Automation__AppInfo         *message);
size_t saleae__automation__app_info__get_packed_size
                     (const Saleae__Automation__AppInfo   *message);
size_t saleae__automation__app_info__pack
                     (const Saleae__Automation__AppInfo   *message,
                      uint8_t             *out);
size_t saleae__automation__app_info__pack_to_buffer
                     (const Saleae__Automation__AppInfo   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__AppInfo *
       saleae__automation__app_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__app_info__free_unpacked
                     (Saleae__Automation__AppInfo *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__Device methods */
void   saleae__automation__device__init
                     (Saleae__Automation__Device         *message);
size_t saleae__automation__device__get_packed_size
                     (const Saleae__Automation__Device   *message);
size_t saleae__automation__device__pack
                     (const Saleae__Automation__Device   *message,
                      uint8_t             *out);
size_t saleae__automation__device__pack_to_buffer
                     (const Saleae__Automation__Device   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__Device *
       saleae__automation__device__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__device__free_unpacked
                     (Saleae__Automation__Device *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__LogicChannels methods */
void   saleae__automation__logic_channels__init
                     (Saleae__Automation__LogicChannels         *message);
size_t saleae__automation__logic_channels__get_packed_size
                     (const Saleae__Automation__LogicChannels   *message);
size_t saleae__automation__logic_channels__pack
                     (const Saleae__Automation__LogicChannels   *message,
                      uint8_t             *out);
size_t saleae__automation__logic_channels__pack_to_buffer
                     (const Saleae__Automation__LogicChannels   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__LogicChannels *
       saleae__automation__logic_channels__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__logic_channels__free_unpacked
                     (Saleae__Automation__LogicChannels *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__CaptureInfo methods */
void   saleae__automation__capture_info__init
                     (Saleae__Automation__CaptureInfo         *message);
size_t saleae__automation__capture_info__get_packed_size
                     (const Saleae__Automation__CaptureInfo   *message);
size_t saleae__automation__capture_info__pack
                     (const Saleae__Automation__CaptureInfo   *message,
                      uint8_t             *out);
size_t saleae__automation__capture_info__pack_to_buffer
                     (const Saleae__Automation__CaptureInfo   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__CaptureInfo *
       saleae__automation__capture_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__capture_info__free_unpacked
                     (Saleae__Automation__CaptureInfo *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__LogicDeviceConfiguration methods */
void   saleae__automation__logic_device_configuration__init
                     (Saleae__Automation__LogicDeviceConfiguration         *message);
size_t saleae__automation__logic_device_configuration__get_packed_size
                     (const Saleae__Automation__LogicDeviceConfiguration   *message);
size_t saleae__automation__logic_device_configuration__pack
                     (const Saleae__Automation__LogicDeviceConfiguration   *message,
                      uint8_t             *out);
size_t saleae__automation__logic_device_configuration__pack_to_buffer
                     (const Saleae__Automation__LogicDeviceConfiguration   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__LogicDeviceConfiguration *
       saleae__automation__logic_device_configuration__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__logic_device_configuration__free_unpacked
                     (Saleae__Automation__LogicDeviceConfiguration *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__GlitchFilterEntry methods */
void   saleae__automation__glitch_filter_entry__init
                     (Saleae__Automation__GlitchFilterEntry         *message);
size_t saleae__automation__glitch_filter_entry__get_packed_size
                     (const Saleae__Automation__GlitchFilterEntry   *message);
size_t saleae__automation__glitch_filter_entry__pack
                     (const Saleae__Automation__GlitchFilterEntry   *message,
                      uint8_t             *out);
size_t saleae__automation__glitch_filter_entry__pack_to_buffer
                     (const Saleae__Automation__GlitchFilterEntry   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__GlitchFilterEntry *
       saleae__automation__glitch_filter_entry__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__glitch_filter_entry__free_unpacked
                     (Saleae__Automation__GlitchFilterEntry *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__ManualCaptureMode methods */
void   saleae__automation__manual_capture_mode__init
                     (Saleae__Automation__ManualCaptureMode         *message);
size_t saleae__automation__manual_capture_mode__get_packed_size
                     (const Saleae__Automation__ManualCaptureMode   *message);
size_t saleae__automation__manual_capture_mode__pack
                     (const Saleae__Automation__ManualCaptureMode   *message,
                      uint8_t             *out);
size_t saleae__automation__manual_capture_mode__pack_to_buffer
                     (const Saleae__Automation__ManualCaptureMode   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__ManualCaptureMode *
       saleae__automation__manual_capture_mode__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__manual_capture_mode__free_unpacked
                     (Saleae__Automation__ManualCaptureMode *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__TimedCaptureMode methods */
void   saleae__automation__timed_capture_mode__init
                     (Saleae__Automation__TimedCaptureMode         *message);
size_t saleae__automation__timed_capture_mode__get_packed_size
                     (const Saleae__Automation__TimedCaptureMode   *message);
size_t saleae__automation__timed_capture_mode__pack
                     (const Saleae__Automation__TimedCaptureMode   *message,
                      uint8_t             *out);
size_t saleae__automation__timed_capture_mode__pack_to_buffer
                     (const Saleae__Automation__TimedCaptureMode   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__TimedCaptureMode *
       saleae__automation__timed_capture_mode__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__timed_capture_mode__free_unpacked
                     (Saleae__Automation__TimedCaptureMode *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__DigitalTriggerLinkedChannel methods */
void   saleae__automation__digital_trigger_linked_channel__init
                     (Saleae__Automation__DigitalTriggerLinkedChannel         *message);
size_t saleae__automation__digital_trigger_linked_channel__get_packed_size
                     (const Saleae__Automation__DigitalTriggerLinkedChannel   *message);
size_t saleae__automation__digital_trigger_linked_channel__pack
                     (const Saleae__Automation__DigitalTriggerLinkedChannel   *message,
                      uint8_t             *out);
size_t saleae__automation__digital_trigger_linked_channel__pack_to_buffer
                     (const Saleae__Automation__DigitalTriggerLinkedChannel   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__DigitalTriggerLinkedChannel *
       saleae__automation__digital_trigger_linked_channel__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__digital_trigger_linked_channel__free_unpacked
                     (Saleae__Automation__DigitalTriggerLinkedChannel *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__DigitalTriggerCaptureMode methods */
void   saleae__automation__digital_trigger_capture_mode__init
                     (Saleae__Automation__DigitalTriggerCaptureMode         *message);
size_t saleae__automation__digital_trigger_capture_mode__get_packed_size
                     (const Saleae__Automation__DigitalTriggerCaptureMode   *message);
size_t saleae__automation__digital_trigger_capture_mode__pack
                     (const Saleae__Automation__DigitalTriggerCaptureMode   *message,
                      uint8_t             *out);
size_t saleae__automation__digital_trigger_capture_mode__pack_to_buffer
                     (const Saleae__Automation__DigitalTriggerCaptureMode   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__DigitalTriggerCaptureMode *
       saleae__automation__digital_trigger_capture_mode__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__digital_trigger_capture_mode__free_unpacked
                     (Saleae__Automation__DigitalTriggerCaptureMode *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__CaptureConfiguration methods */
void   saleae__automation__capture_configuration__init
                     (Saleae__Automation__CaptureConfiguration         *message);
size_t saleae__automation__capture_configuration__get_packed_size
                     (const Saleae__Automation__CaptureConfiguration   *message);
size_t saleae__automation__capture_configuration__pack
                     (const Saleae__Automation__CaptureConfiguration   *message,
                      uint8_t             *out);
size_t saleae__automation__capture_configuration__pack_to_buffer
                     (const Saleae__Automation__CaptureConfiguration   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__CaptureConfiguration *
       saleae__automation__capture_configuration__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__capture_configuration__free_unpacked
                     (Saleae__Automation__CaptureConfiguration *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__GetDevicesRequest methods */
void   saleae__automation__get_devices_request__init
                     (Saleae__Automation__GetDevicesRequest         *message);
size_t saleae__automation__get_devices_request__get_packed_size
                     (const Saleae__Automation__GetDevicesRequest   *message);
size_t saleae__automation__get_devices_request__pack
                     (const Saleae__Automation__GetDevicesRequest   *message,
                      uint8_t             *out);
size_t saleae__automation__get_devices_request__pack_to_buffer
                     (const Saleae__Automation__GetDevicesRequest   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__GetDevicesRequest *
       saleae__automation__get_devices_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__get_devices_request__free_unpacked
                     (Saleae__Automation__GetDevicesRequest *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__GetDevicesReply methods */
void   saleae__automation__get_devices_reply__init
                     (Saleae__Automation__GetDevicesReply         *message);
size_t saleae__automation__get_devices_reply__get_packed_size
                     (const Saleae__Automation__GetDevicesReply   *message);
size_t saleae__automation__get_devices_reply__pack
                     (const Saleae__Automation__GetDevicesReply   *message,
                      uint8_t             *out);
size_t saleae__automation__get_devices_reply__pack_to_buffer
                     (const Saleae__Automation__GetDevicesReply   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__GetDevicesReply *
       saleae__automation__get_devices_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__get_devices_reply__free_unpacked
                     (Saleae__Automation__GetDevicesReply *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__StartCaptureRequest methods */
void   saleae__automation__start_capture_request__init
                     (Saleae__Automation__StartCaptureRequest         *message);
size_t saleae__automation__start_capture_request__get_packed_size
                     (const Saleae__Automation__StartCaptureRequest   *message);
size_t saleae__automation__start_capture_request__pack
                     (const Saleae__Automation__StartCaptureRequest   *message,
                      uint8_t             *out);
size_t saleae__automation__start_capture_request__pack_to_buffer
                     (const Saleae__Automation__StartCaptureRequest   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__StartCaptureRequest *
       saleae__automation__start_capture_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__start_capture_request__free_unpacked
                     (Saleae__Automation__StartCaptureRequest *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__StartCaptureReply methods */
void   saleae__automation__start_capture_reply__init
                     (Saleae__Automation__StartCaptureReply         *message);
size_t saleae__automation__start_capture_reply__get_packed_size
                     (const Saleae__Automation__StartCaptureReply   *message);
size_t saleae__automation__start_capture_reply__pack
                     (const Saleae__Automation__StartCaptureReply   *message,
                      uint8_t             *out);
size_t saleae__automation__start_capture_reply__pack_to_buffer
                     (const Saleae__Automation__StartCaptureReply   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__StartCaptureReply *
       saleae__automation__start_capture_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__start_capture_reply__free_unpacked
                     (Saleae__Automation__StartCaptureReply *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__StopCaptureRequest methods */
void   saleae__automation__stop_capture_request__init
                     (Saleae__Automation__StopCaptureRequest         *message);
size_t saleae__automation__stop_capture_request__get_packed_size
                     (const Saleae__Automation__StopCaptureRequest   *message);
size_t saleae__automation__stop_capture_request__pack
                     (const Saleae__Automation__StopCaptureRequest   *message,
                      uint8_t             *out);
size_t saleae__automation__stop_capture_request__pack_to_buffer
                     (const Saleae__Automation__StopCaptureRequest   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__StopCaptureRequest *
       saleae__automation__stop_capture_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__stop_capture_request__free_unpacked
                     (Saleae__Automation__StopCaptureRequest *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__StopCaptureReply methods */
void   saleae__automation__stop_capture_reply__init
                     (Saleae__Automation__StopCaptureReply         *message);
size_t saleae__automation__stop_capture_reply__get_packed_size
                     (const Saleae__Automation__StopCaptureReply   *message);
size_t saleae__automation__stop_capture_reply__pack
                     (const Saleae__Automation__StopCaptureReply   *message,
                      uint8_t             *out);
size_t saleae__automation__stop_capture_reply__pack_to_buffer
                     (const Saleae__Automation__StopCaptureReply   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__StopCaptureReply *
       saleae__automation__stop_capture_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__stop_capture_reply__free_unpacked
                     (Saleae__Automation__StopCaptureReply *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__WaitCaptureRequest methods */
void   saleae__automation__wait_capture_request__init
                     (Saleae__Automation__WaitCaptureRequest         *message);
size_t saleae__automation__wait_capture_request__get_packed_size
                     (const Saleae__Automation__WaitCaptureRequest   *message);
size_t saleae__automation__wait_capture_request__pack
                     (const Saleae__Automation__WaitCaptureRequest   *message,
                      uint8_t             *out);
size_t saleae__automation__wait_capture_request__pack_to_buffer
                     (const Saleae__Automation__WaitCaptureRequest   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__WaitCaptureRequest *
       saleae__automation__wait_capture_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__wait_capture_request__free_unpacked
                     (Saleae__Automation__WaitCaptureRequest *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__WaitCaptureReply methods */
void   saleae__automation__wait_capture_reply__init
                     (Saleae__Automation__WaitCaptureReply         *message);
size_t saleae__automation__wait_capture_reply__get_packed_size
                     (const Saleae__Automation__WaitCaptureReply   *message);
size_t saleae__automation__wait_capture_reply__pack
                     (const Saleae__Automation__WaitCaptureReply   *message,
                      uint8_t             *out);
size_t saleae__automation__wait_capture_reply__pack_to_buffer
                     (const Saleae__Automation__WaitCaptureReply   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__WaitCaptureReply *
       saleae__automation__wait_capture_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__wait_capture_reply__free_unpacked
                     (Saleae__Automation__WaitCaptureReply *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__LoadCaptureRequest methods */
void   saleae__automation__load_capture_request__init
                     (Saleae__Automation__LoadCaptureRequest         *message);
size_t saleae__automation__load_capture_request__get_packed_size
                     (const Saleae__Automation__LoadCaptureRequest   *message);
size_t saleae__automation__load_capture_request__pack
                     (const Saleae__Automation__LoadCaptureRequest   *message,
                      uint8_t             *out);
size_t saleae__automation__load_capture_request__pack_to_buffer
                     (const Saleae__Automation__LoadCaptureRequest   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__LoadCaptureRequest *
       saleae__automation__load_capture_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__load_capture_request__free_unpacked
                     (Saleae__Automation__LoadCaptureRequest *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__LoadCaptureReply methods */
void   saleae__automation__load_capture_reply__init
                     (Saleae__Automation__LoadCaptureReply         *message);
size_t saleae__automation__load_capture_reply__get_packed_size
                     (const Saleae__Automation__LoadCaptureReply   *message);
size_t saleae__automation__load_capture_reply__pack
                     (const Saleae__Automation__LoadCaptureReply   *message,
                      uint8_t             *out);
size_t saleae__automation__load_capture_reply__pack_to_buffer
                     (const Saleae__Automation__LoadCaptureReply   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__LoadCaptureReply *
       saleae__automation__load_capture_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__load_capture_reply__free_unpacked
                     (Saleae__Automation__LoadCaptureReply *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__SaveCaptureRequest methods */
void   saleae__automation__save_capture_request__init
                     (Saleae__Automation__SaveCaptureRequest         *message);
size_t saleae__automation__save_capture_request__get_packed_size
                     (const Saleae__Automation__SaveCaptureRequest   *message);
size_t saleae__automation__save_capture_request__pack
                     (const Saleae__Automation__SaveCaptureRequest   *message,
                      uint8_t             *out);
size_t saleae__automation__save_capture_request__pack_to_buffer
                     (const Saleae__Automation__SaveCaptureRequest   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__SaveCaptureRequest *
       saleae__automation__save_capture_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__save_capture_request__free_unpacked
                     (Saleae__Automation__SaveCaptureRequest *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__SaveCaptureReply methods */
void   saleae__automation__save_capture_reply__init
                     (Saleae__Automation__SaveCaptureReply         *message);
size_t saleae__automation__save_capture_reply__get_packed_size
                     (const Saleae__Automation__SaveCaptureReply   *message);
size_t saleae__automation__save_capture_reply__pack
                     (const Saleae__Automation__SaveCaptureReply   *message,
                      uint8_t             *out);
size_t saleae__automation__save_capture_reply__pack_to_buffer
                     (const Saleae__Automation__SaveCaptureReply   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__SaveCaptureReply *
       saleae__automation__save_capture_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__save_capture_reply__free_unpacked
                     (Saleae__Automation__SaveCaptureReply *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__CloseCaptureRequest methods */
void   saleae__automation__close_capture_request__init
                     (Saleae__Automation__CloseCaptureRequest         *message);
size_t saleae__automation__close_capture_request__get_packed_size
                     (const Saleae__Automation__CloseCaptureRequest   *message);
size_t saleae__automation__close_capture_request__pack
                     (const Saleae__Automation__CloseCaptureRequest   *message,
                      uint8_t             *out);
size_t saleae__automation__close_capture_request__pack_to_buffer
                     (const Saleae__Automation__CloseCaptureRequest   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__CloseCaptureRequest *
       saleae__automation__close_capture_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__close_capture_request__free_unpacked
                     (Saleae__Automation__CloseCaptureRequest *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__CloseCaptureReply methods */
void   saleae__automation__close_capture_reply__init
                     (Saleae__Automation__CloseCaptureReply         *message);
size_t saleae__automation__close_capture_reply__get_packed_size
                     (const Saleae__Automation__CloseCaptureReply   *message);
size_t saleae__automation__close_capture_reply__pack
                     (const Saleae__Automation__CloseCaptureReply   *message,
                      uint8_t             *out);
size_t saleae__automation__close_capture_reply__pack_to_buffer
                     (const Saleae__Automation__CloseCaptureReply   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__CloseCaptureReply *
       saleae__automation__close_capture_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__close_capture_reply__free_unpacked
                     (Saleae__Automation__CloseCaptureReply *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__ExportRawDataCsvRequest methods */
void   saleae__automation__export_raw_data_csv_request__init
                     (Saleae__Automation__ExportRawDataCsvRequest         *message);
size_t saleae__automation__export_raw_data_csv_request__get_packed_size
                     (const Saleae__Automation__ExportRawDataCsvRequest   *message);
size_t saleae__automation__export_raw_data_csv_request__pack
                     (const Saleae__Automation__ExportRawDataCsvRequest   *message,
                      uint8_t             *out);
size_t saleae__automation__export_raw_data_csv_request__pack_to_buffer
                     (const Saleae__Automation__ExportRawDataCsvRequest   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__ExportRawDataCsvRequest *
       saleae__automation__export_raw_data_csv_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__export_raw_data_csv_request__free_unpacked
                     (Saleae__Automation__ExportRawDataCsvRequest *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__ExportRawDataCsvReply methods */
void   saleae__automation__export_raw_data_csv_reply__init
                     (Saleae__Automation__ExportRawDataCsvReply         *message);
size_t saleae__automation__export_raw_data_csv_reply__get_packed_size
                     (const Saleae__Automation__ExportRawDataCsvReply   *message);
size_t saleae__automation__export_raw_data_csv_reply__pack
                     (const Saleae__Automation__ExportRawDataCsvReply   *message,
                      uint8_t             *out);
size_t saleae__automation__export_raw_data_csv_reply__pack_to_buffer
                     (const Saleae__Automation__ExportRawDataCsvReply   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__ExportRawDataCsvReply *
       saleae__automation__export_raw_data_csv_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__export_raw_data_csv_reply__free_unpacked
                     (Saleae__Automation__ExportRawDataCsvReply *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__ExportRawDataBinaryRequest methods */
void   saleae__automation__export_raw_data_binary_request__init
                     (Saleae__Automation__ExportRawDataBinaryRequest         *message);
size_t saleae__automation__export_raw_data_binary_request__get_packed_size
                     (const Saleae__Automation__ExportRawDataBinaryRequest   *message);
size_t saleae__automation__export_raw_data_binary_request__pack
                     (const Saleae__Automation__ExportRawDataBinaryRequest   *message,
                      uint8_t             *out);
size_t saleae__automation__export_raw_data_binary_request__pack_to_buffer
                     (const Saleae__Automation__ExportRawDataBinaryRequest   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__ExportRawDataBinaryRequest *
       saleae__automation__export_raw_data_binary_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__export_raw_data_binary_request__free_unpacked
                     (Saleae__Automation__ExportRawDataBinaryRequest *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__ExportRawDataBinaryReply methods */
void   saleae__automation__export_raw_data_binary_reply__init
                     (Saleae__Automation__ExportRawDataBinaryReply         *message);
size_t saleae__automation__export_raw_data_binary_reply__get_packed_size
                     (const Saleae__Automation__ExportRawDataBinaryReply   *message);
size_t saleae__automation__export_raw_data_binary_reply__pack
                     (const Saleae__Automation__ExportRawDataBinaryReply   *message,
                      uint8_t             *out);
size_t saleae__automation__export_raw_data_binary_reply__pack_to_buffer
                     (const Saleae__Automation__ExportRawDataBinaryReply   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__ExportRawDataBinaryReply *
       saleae__automation__export_raw_data_binary_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__export_raw_data_binary_reply__free_unpacked
                     (Saleae__Automation__ExportRawDataBinaryReply *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__AnalyzerSettingValue methods */
void   saleae__automation__analyzer_setting_value__init
                     (Saleae__Automation__AnalyzerSettingValue         *message);
size_t saleae__automation__analyzer_setting_value__get_packed_size
                     (const Saleae__Automation__AnalyzerSettingValue   *message);
size_t saleae__automation__analyzer_setting_value__pack
                     (const Saleae__Automation__AnalyzerSettingValue   *message,
                      uint8_t             *out);
size_t saleae__automation__analyzer_setting_value__pack_to_buffer
                     (const Saleae__Automation__AnalyzerSettingValue   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__AnalyzerSettingValue *
       saleae__automation__analyzer_setting_value__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__analyzer_setting_value__free_unpacked
                     (Saleae__Automation__AnalyzerSettingValue *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__AddAnalyzerRequest__SettingsEntry methods */
void   saleae__automation__add_analyzer_request__settings_entry__init
                     (Saleae__Automation__AddAnalyzerRequest__SettingsEntry         *message);
/* Saleae__Automation__AddAnalyzerRequest methods */
void   saleae__automation__add_analyzer_request__init
                     (Saleae__Automation__AddAnalyzerRequest         *message);
size_t saleae__automation__add_analyzer_request__get_packed_size
                     (const Saleae__Automation__AddAnalyzerRequest   *message);
size_t saleae__automation__add_analyzer_request__pack
                     (const Saleae__Automation__AddAnalyzerRequest   *message,
                      uint8_t             *out);
size_t saleae__automation__add_analyzer_request__pack_to_buffer
                     (const Saleae__Automation__AddAnalyzerRequest   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__AddAnalyzerRequest *
       saleae__automation__add_analyzer_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__add_analyzer_request__free_unpacked
                     (Saleae__Automation__AddAnalyzerRequest *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__AddAnalyzerReply methods */
void   saleae__automation__add_analyzer_reply__init
                     (Saleae__Automation__AddAnalyzerReply         *message);
size_t saleae__automation__add_analyzer_reply__get_packed_size
                     (const Saleae__Automation__AddAnalyzerReply   *message);
size_t saleae__automation__add_analyzer_reply__pack
                     (const Saleae__Automation__AddAnalyzerReply   *message,
                      uint8_t             *out);
size_t saleae__automation__add_analyzer_reply__pack_to_buffer
                     (const Saleae__Automation__AddAnalyzerReply   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__AddAnalyzerReply *
       saleae__automation__add_analyzer_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__add_analyzer_reply__free_unpacked
                     (Saleae__Automation__AddAnalyzerReply *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__RemoveAnalyzerRequest methods */
void   saleae__automation__remove_analyzer_request__init
                     (Saleae__Automation__RemoveAnalyzerRequest         *message);
size_t saleae__automation__remove_analyzer_request__get_packed_size
                     (const Saleae__Automation__RemoveAnalyzerRequest   *message);
size_t saleae__automation__remove_analyzer_request__pack
                     (const Saleae__Automation__RemoveAnalyzerRequest   *message,
                      uint8_t             *out);
size_t saleae__automation__remove_analyzer_request__pack_to_buffer
                     (const Saleae__Automation__RemoveAnalyzerRequest   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__RemoveAnalyzerRequest *
       saleae__automation__remove_analyzer_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__remove_analyzer_request__free_unpacked
                     (Saleae__Automation__RemoveAnalyzerRequest *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__RemoveAnalyzerReply methods */
void   saleae__automation__remove_analyzer_reply__init
                     (Saleae__Automation__RemoveAnalyzerReply         *message);
size_t saleae__automation__remove_analyzer_reply__get_packed_size
                     (const Saleae__Automation__RemoveAnalyzerReply   *message);
size_t saleae__automation__remove_analyzer_reply__pack
                     (const Saleae__Automation__RemoveAnalyzerReply   *message,
                      uint8_t             *out);
size_t saleae__automation__remove_analyzer_reply__pack_to_buffer
                     (const Saleae__Automation__RemoveAnalyzerReply   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__RemoveAnalyzerReply *
       saleae__automation__remove_analyzer_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__remove_analyzer_reply__free_unpacked
                     (Saleae__Automation__RemoveAnalyzerReply *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__HighLevelAnalyzerSettingValue methods */
void   saleae__automation__high_level_analyzer_setting_value__init
                     (Saleae__Automation__HighLevelAnalyzerSettingValue         *message);
size_t saleae__automation__high_level_analyzer_setting_value__get_packed_size
                     (const Saleae__Automation__HighLevelAnalyzerSettingValue   *message);
size_t saleae__automation__high_level_analyzer_setting_value__pack
                     (const Saleae__Automation__HighLevelAnalyzerSettingValue   *message,
                      uint8_t             *out);
size_t saleae__automation__high_level_analyzer_setting_value__pack_to_buffer
                     (const Saleae__Automation__HighLevelAnalyzerSettingValue   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__HighLevelAnalyzerSettingValue *
       saleae__automation__high_level_analyzer_setting_value__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__high_level_analyzer_setting_value__free_unpacked
                     (Saleae__Automation__HighLevelAnalyzerSettingValue *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__AddHighLevelAnalyzerRequest__SettingsEntry methods */
void   saleae__automation__add_high_level_analyzer_request__settings_entry__init
                     (Saleae__Automation__AddHighLevelAnalyzerRequest__SettingsEntry         *message);
/* Saleae__Automation__AddHighLevelAnalyzerRequest methods */
void   saleae__automation__add_high_level_analyzer_request__init
                     (Saleae__Automation__AddHighLevelAnalyzerRequest         *message);
size_t saleae__automation__add_high_level_analyzer_request__get_packed_size
                     (const Saleae__Automation__AddHighLevelAnalyzerRequest   *message);
size_t saleae__automation__add_high_level_analyzer_request__pack
                     (const Saleae__Automation__AddHighLevelAnalyzerRequest   *message,
                      uint8_t             *out);
size_t saleae__automation__add_high_level_analyzer_request__pack_to_buffer
                     (const Saleae__Automation__AddHighLevelAnalyzerRequest   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__AddHighLevelAnalyzerRequest *
       saleae__automation__add_high_level_analyzer_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__add_high_level_analyzer_request__free_unpacked
                     (Saleae__Automation__AddHighLevelAnalyzerRequest *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__AddHighLevelAnalyzerReply methods */
void   saleae__automation__add_high_level_analyzer_reply__init
                     (Saleae__Automation__AddHighLevelAnalyzerReply         *message);
size_t saleae__automation__add_high_level_analyzer_reply__get_packed_size
                     (const Saleae__Automation__AddHighLevelAnalyzerReply   *message);
size_t saleae__automation__add_high_level_analyzer_reply__pack
                     (const Saleae__Automation__AddHighLevelAnalyzerReply   *message,
                      uint8_t             *out);
size_t saleae__automation__add_high_level_analyzer_reply__pack_to_buffer
                     (const Saleae__Automation__AddHighLevelAnalyzerReply   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__AddHighLevelAnalyzerReply *
       saleae__automation__add_high_level_analyzer_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__add_high_level_analyzer_reply__free_unpacked
                     (Saleae__Automation__AddHighLevelAnalyzerReply *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__RemoveHighLevelAnalyzerRequest methods */
void   saleae__automation__remove_high_level_analyzer_request__init
                     (Saleae__Automation__RemoveHighLevelAnalyzerRequest         *message);
size_t saleae__automation__remove_high_level_analyzer_request__get_packed_size
                     (const Saleae__Automation__RemoveHighLevelAnalyzerRequest   *message);
size_t saleae__automation__remove_high_level_analyzer_request__pack
                     (const Saleae__Automation__RemoveHighLevelAnalyzerRequest   *message,
                      uint8_t             *out);
size_t saleae__automation__remove_high_level_analyzer_request__pack_to_buffer
                     (const Saleae__Automation__RemoveHighLevelAnalyzerRequest   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__RemoveHighLevelAnalyzerRequest *
       saleae__automation__remove_high_level_analyzer_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__remove_high_level_analyzer_request__free_unpacked
                     (Saleae__Automation__RemoveHighLevelAnalyzerRequest *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__RemoveHighLevelAnalyzerReply methods */
void   saleae__automation__remove_high_level_analyzer_reply__init
                     (Saleae__Automation__RemoveHighLevelAnalyzerReply         *message);
size_t saleae__automation__remove_high_level_analyzer_reply__get_packed_size
                     (const Saleae__Automation__RemoveHighLevelAnalyzerReply   *message);
size_t saleae__automation__remove_high_level_analyzer_reply__pack
                     (const Saleae__Automation__RemoveHighLevelAnalyzerReply   *message,
                      uint8_t             *out);
size_t saleae__automation__remove_high_level_analyzer_reply__pack_to_buffer
                     (const Saleae__Automation__RemoveHighLevelAnalyzerReply   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__RemoveHighLevelAnalyzerReply *
       saleae__automation__remove_high_level_analyzer_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__remove_high_level_analyzer_reply__free_unpacked
                     (Saleae__Automation__RemoveHighLevelAnalyzerReply *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__DataTableAnalyzerConfiguration methods */
void   saleae__automation__data_table_analyzer_configuration__init
                     (Saleae__Automation__DataTableAnalyzerConfiguration         *message);
size_t saleae__automation__data_table_analyzer_configuration__get_packed_size
                     (const Saleae__Automation__DataTableAnalyzerConfiguration   *message);
size_t saleae__automation__data_table_analyzer_configuration__pack
                     (const Saleae__Automation__DataTableAnalyzerConfiguration   *message,
                      uint8_t             *out);
size_t saleae__automation__data_table_analyzer_configuration__pack_to_buffer
                     (const Saleae__Automation__DataTableAnalyzerConfiguration   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__DataTableAnalyzerConfiguration *
       saleae__automation__data_table_analyzer_configuration__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__data_table_analyzer_configuration__free_unpacked
                     (Saleae__Automation__DataTableAnalyzerConfiguration *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__DataTableFilter methods */
void   saleae__automation__data_table_filter__init
                     (Saleae__Automation__DataTableFilter         *message);
size_t saleae__automation__data_table_filter__get_packed_size
                     (const Saleae__Automation__DataTableFilter   *message);
size_t saleae__automation__data_table_filter__pack
                     (const Saleae__Automation__DataTableFilter   *message,
                      uint8_t             *out);
size_t saleae__automation__data_table_filter__pack_to_buffer
                     (const Saleae__Automation__DataTableFilter   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__DataTableFilter *
       saleae__automation__data_table_filter__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__data_table_filter__free_unpacked
                     (Saleae__Automation__DataTableFilter *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__ExportDataTableCsvRequest methods */
void   saleae__automation__export_data_table_csv_request__init
                     (Saleae__Automation__ExportDataTableCsvRequest         *message);
size_t saleae__automation__export_data_table_csv_request__get_packed_size
                     (const Saleae__Automation__ExportDataTableCsvRequest   *message);
size_t saleae__automation__export_data_table_csv_request__pack
                     (const Saleae__Automation__ExportDataTableCsvRequest   *message,
                      uint8_t             *out);
size_t saleae__automation__export_data_table_csv_request__pack_to_buffer
                     (const Saleae__Automation__ExportDataTableCsvRequest   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__ExportDataTableCsvRequest *
       saleae__automation__export_data_table_csv_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__export_data_table_csv_request__free_unpacked
                     (Saleae__Automation__ExportDataTableCsvRequest *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__ExportDataTableCsvReply methods */
void   saleae__automation__export_data_table_csv_reply__init
                     (Saleae__Automation__ExportDataTableCsvReply         *message);
size_t saleae__automation__export_data_table_csv_reply__get_packed_size
                     (const Saleae__Automation__ExportDataTableCsvReply   *message);
size_t saleae__automation__export_data_table_csv_reply__pack
                     (const Saleae__Automation__ExportDataTableCsvReply   *message,
                      uint8_t             *out);
size_t saleae__automation__export_data_table_csv_reply__pack_to_buffer
                     (const Saleae__Automation__ExportDataTableCsvReply   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__ExportDataTableCsvReply *
       saleae__automation__export_data_table_csv_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__export_data_table_csv_reply__free_unpacked
                     (Saleae__Automation__ExportDataTableCsvReply *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__LegacyExportAnalyzerRequest methods */
void   saleae__automation__legacy_export_analyzer_request__init
                     (Saleae__Automation__LegacyExportAnalyzerRequest         *message);
size_t saleae__automation__legacy_export_analyzer_request__get_packed_size
                     (const Saleae__Automation__LegacyExportAnalyzerRequest   *message);
size_t saleae__automation__legacy_export_analyzer_request__pack
                     (const Saleae__Automation__LegacyExportAnalyzerRequest   *message,
                      uint8_t             *out);
size_t saleae__automation__legacy_export_analyzer_request__pack_to_buffer
                     (const Saleae__Automation__LegacyExportAnalyzerRequest   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__LegacyExportAnalyzerRequest *
       saleae__automation__legacy_export_analyzer_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__legacy_export_analyzer_request__free_unpacked
                     (Saleae__Automation__LegacyExportAnalyzerRequest *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__LegacyExportAnalyzerReply methods */
void   saleae__automation__legacy_export_analyzer_reply__init
                     (Saleae__Automation__LegacyExportAnalyzerReply         *message);
size_t saleae__automation__legacy_export_analyzer_reply__get_packed_size
                     (const Saleae__Automation__LegacyExportAnalyzerReply   *message);
size_t saleae__automation__legacy_export_analyzer_reply__pack
                     (const Saleae__Automation__LegacyExportAnalyzerReply   *message,
                      uint8_t             *out);
size_t saleae__automation__legacy_export_analyzer_reply__pack_to_buffer
                     (const Saleae__Automation__LegacyExportAnalyzerReply   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__LegacyExportAnalyzerReply *
       saleae__automation__legacy_export_analyzer_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__legacy_export_analyzer_reply__free_unpacked
                     (Saleae__Automation__LegacyExportAnalyzerReply *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__GetAppInfoRequest methods */
void   saleae__automation__get_app_info_request__init
                     (Saleae__Automation__GetAppInfoRequest         *message);
size_t saleae__automation__get_app_info_request__get_packed_size
                     (const Saleae__Automation__GetAppInfoRequest   *message);
size_t saleae__automation__get_app_info_request__pack
                     (const Saleae__Automation__GetAppInfoRequest   *message,
                      uint8_t             *out);
size_t saleae__automation__get_app_info_request__pack_to_buffer
                     (const Saleae__Automation__GetAppInfoRequest   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__GetAppInfoRequest *
       saleae__automation__get_app_info_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__get_app_info_request__free_unpacked
                     (Saleae__Automation__GetAppInfoRequest *message,
                      ProtobufCAllocator *allocator);
/* Saleae__Automation__GetAppInfoReply methods */
void   saleae__automation__get_app_info_reply__init
                     (Saleae__Automation__GetAppInfoReply         *message);
size_t saleae__automation__get_app_info_reply__get_packed_size
                     (const Saleae__Automation__GetAppInfoReply   *message);
size_t saleae__automation__get_app_info_reply__pack
                     (const Saleae__Automation__GetAppInfoReply   *message,
                      uint8_t             *out);
size_t saleae__automation__get_app_info_reply__pack_to_buffer
                     (const Saleae__Automation__GetAppInfoReply   *message,
                      ProtobufCBuffer     *buffer);
Saleae__Automation__GetAppInfoReply *
       saleae__automation__get_app_info_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   saleae__automation__get_app_info_reply__free_unpacked
                     (Saleae__Automation__GetAppInfoReply *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Saleae__Automation__Version_Closure)
                 (const Saleae__Automation__Version *message,
                  void *closure_data);
typedef void (*Saleae__Automation__AppInfo_Closure)
                 (const Saleae__Automation__AppInfo *message,
                  void *closure_data);
typedef void (*Saleae__Automation__Device_Closure)
                 (const Saleae__Automation__Device *message,
                  void *closure_data);
typedef void (*Saleae__Automation__LogicChannels_Closure)
                 (const Saleae__Automation__LogicChannels *message,
                  void *closure_data);
typedef void (*Saleae__Automation__CaptureInfo_Closure)
                 (const Saleae__Automation__CaptureInfo *message,
                  void *closure_data);
typedef void (*Saleae__Automation__LogicDeviceConfiguration_Closure)
                 (const Saleae__Automation__LogicDeviceConfiguration *message,
                  void *closure_data);
typedef void (*Saleae__Automation__GlitchFilterEntry_Closure)
                 (const Saleae__Automation__GlitchFilterEntry *message,
                  void *closure_data);
typedef void (*Saleae__Automation__ManualCaptureMode_Closure)
                 (const Saleae__Automation__ManualCaptureMode *message,
                  void *closure_data);
typedef void (*Saleae__Automation__TimedCaptureMode_Closure)
                 (const Saleae__Automation__TimedCaptureMode *message,
                  void *closure_data);
typedef void (*Saleae__Automation__DigitalTriggerLinkedChannel_Closure)
                 (const Saleae__Automation__DigitalTriggerLinkedChannel *message,
                  void *closure_data);
typedef void (*Saleae__Automation__DigitalTriggerCaptureMode_Closure)
                 (const Saleae__Automation__DigitalTriggerCaptureMode *message,
                  void *closure_data);
typedef void (*Saleae__Automation__CaptureConfiguration_Closure)
                 (const Saleae__Automation__CaptureConfiguration *message,
                  void *closure_data);
typedef void (*Saleae__Automation__GetDevicesRequest_Closure)
                 (const Saleae__Automation__GetDevicesRequest *message,
                  void *closure_data);
typedef void (*Saleae__Automation__GetDevicesReply_Closure)
                 (const Saleae__Automation__GetDevicesReply *message,
                  void *closure_data);
typedef void (*Saleae__Automation__StartCaptureRequest_Closure)
                 (const Saleae__Automation__StartCaptureRequest *message,
                  void *closure_data);
typedef void (*Saleae__Automation__StartCaptureReply_Closure)
                 (const Saleae__Automation__StartCaptureReply *message,
                  void *closure_data);
typedef void (*Saleae__Automation__StopCaptureRequest_Closure)
                 (const Saleae__Automation__StopCaptureRequest *message,
                  void *closure_data);
typedef void (*Saleae__Automation__StopCaptureReply_Closure)
                 (const Saleae__Automation__StopCaptureReply *message,
                  void *closure_data);
typedef void (*Saleae__Automation__WaitCaptureRequest_Closure)
                 (const Saleae__Automation__WaitCaptureRequest *message,
                  void *closure_data);
typedef void (*Saleae__Automation__WaitCaptureReply_Closure)
                 (const Saleae__Automation__WaitCaptureReply *message,
                  void *closure_data);
typedef void (*Saleae__Automation__LoadCaptureRequest_Closure)
                 (const Saleae__Automation__LoadCaptureRequest *message,
                  void *closure_data);
typedef void (*Saleae__Automation__LoadCaptureReply_Closure)
                 (const Saleae__Automation__LoadCaptureReply *message,
                  void *closure_data);
typedef void (*Saleae__Automation__SaveCaptureRequest_Closure)
                 (const Saleae__Automation__SaveCaptureRequest *message,
                  void *closure_data);
typedef void (*Saleae__Automation__SaveCaptureReply_Closure)
                 (const Saleae__Automation__SaveCaptureReply *message,
                  void *closure_data);
typedef void (*Saleae__Automation__CloseCaptureRequest_Closure)
                 (const Saleae__Automation__CloseCaptureRequest *message,
                  void *closure_data);
typedef void (*Saleae__Automation__CloseCaptureReply_Closure)
                 (const Saleae__Automation__CloseCaptureReply *message,
                  void *closure_data);
typedef void (*Saleae__Automation__ExportRawDataCsvRequest_Closure)
                 (const Saleae__Automation__ExportRawDataCsvRequest *message,
                  void *closure_data);
typedef void (*Saleae__Automation__ExportRawDataCsvReply_Closure)
                 (const Saleae__Automation__ExportRawDataCsvReply *message,
                  void *closure_data);
typedef void (*Saleae__Automation__ExportRawDataBinaryRequest_Closure)
                 (const Saleae__Automation__ExportRawDataBinaryRequest *message,
                  void *closure_data);
typedef void (*Saleae__Automation__ExportRawDataBinaryReply_Closure)
                 (const Saleae__Automation__ExportRawDataBinaryReply *message,
                  void *closure_data);
typedef void (*Saleae__Automation__AnalyzerSettingValue_Closure)
                 (const Saleae__Automation__AnalyzerSettingValue *message,
                  void *closure_data);
typedef void (*Saleae__Automation__AddAnalyzerRequest__SettingsEntry_Closure)
                 (const Saleae__Automation__AddAnalyzerRequest__SettingsEntry *message,
                  void *closure_data);
typedef void (*Saleae__Automation__AddAnalyzerRequest_Closure)
                 (const Saleae__Automation__AddAnalyzerRequest *message,
                  void *closure_data);
typedef void (*Saleae__Automation__AddAnalyzerReply_Closure)
                 (const Saleae__Automation__AddAnalyzerReply *message,
                  void *closure_data);
typedef void (*Saleae__Automation__RemoveAnalyzerRequest_Closure)
                 (const Saleae__Automation__RemoveAnalyzerRequest *message,
                  void *closure_data);
typedef void (*Saleae__Automation__RemoveAnalyzerReply_Closure)
                 (const Saleae__Automation__RemoveAnalyzerReply *message,
                  void *closure_data);
typedef void (*Saleae__Automation__HighLevelAnalyzerSettingValue_Closure)
                 (const Saleae__Automation__HighLevelAnalyzerSettingValue *message,
                  void *closure_data);
typedef void (*Saleae__Automation__AddHighLevelAnalyzerRequest__SettingsEntry_Closure)
                 (const Saleae__Automation__AddHighLevelAnalyzerRequest__SettingsEntry *message,
                  void *closure_data);
typedef void (*Saleae__Automation__AddHighLevelAnalyzerRequest_Closure)
                 (const Saleae__Automation__AddHighLevelAnalyzerRequest *message,
                  void *closure_data);
typedef void (*Saleae__Automation__AddHighLevelAnalyzerReply_Closure)
                 (const Saleae__Automation__AddHighLevelAnalyzerReply *message,
                  void *closure_data);
typedef void (*Saleae__Automation__RemoveHighLevelAnalyzerRequest_Closure)
                 (const Saleae__Automation__RemoveHighLevelAnalyzerRequest *message,
                  void *closure_data);
typedef void (*Saleae__Automation__RemoveHighLevelAnalyzerReply_Closure)
                 (const Saleae__Automation__RemoveHighLevelAnalyzerReply *message,
                  void *closure_data);
typedef void (*Saleae__Automation__DataTableAnalyzerConfiguration_Closure)
                 (const Saleae__Automation__DataTableAnalyzerConfiguration *message,
                  void *closure_data);
typedef void (*Saleae__Automation__DataTableFilter_Closure)
                 (const Saleae__Automation__DataTableFilter *message,
                  void *closure_data);
typedef void (*Saleae__Automation__ExportDataTableCsvRequest_Closure)
                 (const Saleae__Automation__ExportDataTableCsvRequest *message,
                  void *closure_data);
typedef void (*Saleae__Automation__ExportDataTableCsvReply_Closure)
                 (const Saleae__Automation__ExportDataTableCsvReply *message,
                  void *closure_data);
typedef void (*Saleae__Automation__LegacyExportAnalyzerRequest_Closure)
                 (const Saleae__Automation__LegacyExportAnalyzerRequest *message,
                  void *closure_data);
typedef void (*Saleae__Automation__LegacyExportAnalyzerReply_Closure)
                 (const Saleae__Automation__LegacyExportAnalyzerReply *message,
                  void *closure_data);
typedef void (*Saleae__Automation__GetAppInfoRequest_Closure)
                 (const Saleae__Automation__GetAppInfoRequest *message,
                  void *closure_data);
typedef void (*Saleae__Automation__GetAppInfoReply_Closure)
                 (const Saleae__Automation__GetAppInfoReply *message,
                  void *closure_data);

/* --- services --- */

typedef struct Saleae__Automation__Manager_Service Saleae__Automation__Manager_Service;
struct Saleae__Automation__Manager_Service
{
  ProtobufCService base;
  void (*get_app_info)(Saleae__Automation__Manager_Service *service,
                       const Saleae__Automation__GetAppInfoRequest *input,
                       Saleae__Automation__GetAppInfoReply_Closure closure,
                       void *closure_data);
  void (*get_devices)(Saleae__Automation__Manager_Service *service,
                      const Saleae__Automation__GetDevicesRequest *input,
                      Saleae__Automation__GetDevicesReply_Closure closure,
                      void *closure_data);
  void (*start_capture)(Saleae__Automation__Manager_Service *service,
                        const Saleae__Automation__StartCaptureRequest *input,
                        Saleae__Automation__StartCaptureReply_Closure closure,
                        void *closure_data);
  void (*stop_capture)(Saleae__Automation__Manager_Service *service,
                       const Saleae__Automation__StopCaptureRequest *input,
                       Saleae__Automation__StopCaptureReply_Closure closure,
                       void *closure_data);
  void (*wait_capture)(Saleae__Automation__Manager_Service *service,
                       const Saleae__Automation__WaitCaptureRequest *input,
                       Saleae__Automation__WaitCaptureReply_Closure closure,
                       void *closure_data);
  void (*load_capture)(Saleae__Automation__Manager_Service *service,
                       const Saleae__Automation__LoadCaptureRequest *input,
                       Saleae__Automation__LoadCaptureReply_Closure closure,
                       void *closure_data);
  void (*save_capture)(Saleae__Automation__Manager_Service *service,
                       const Saleae__Automation__SaveCaptureRequest *input,
                       Saleae__Automation__SaveCaptureReply_Closure closure,
                       void *closure_data);
  void (*close_capture)(Saleae__Automation__Manager_Service *service,
                        const Saleae__Automation__CloseCaptureRequest *input,
                        Saleae__Automation__CloseCaptureReply_Closure closure,
                        void *closure_data);
  void (*add_analyzer)(Saleae__Automation__Manager_Service *service,
                       const Saleae__Automation__AddAnalyzerRequest *input,
                       Saleae__Automation__AddAnalyzerReply_Closure closure,
                       void *closure_data);
  void (*remove_analyzer)(Saleae__Automation__Manager_Service *service,
                          const Saleae__Automation__RemoveAnalyzerRequest *input,
                          Saleae__Automation__RemoveAnalyzerReply_Closure closure,
                          void *closure_data);
  void (*add_high_level_analyzer)(Saleae__Automation__Manager_Service *service,
                                  const Saleae__Automation__AddHighLevelAnalyzerRequest *input,
                                  Saleae__Automation__AddHighLevelAnalyzerReply_Closure closure,
                                  void *closure_data);
  void (*remove_high_level_analyzer)(Saleae__Automation__Manager_Service *service,
                                     const Saleae__Automation__RemoveHighLevelAnalyzerRequest *input,
                                     Saleae__Automation__RemoveHighLevelAnalyzerReply_Closure closure,
                                     void *closure_data);
  void (*export_raw_data_csv)(Saleae__Automation__Manager_Service *service,
                              const Saleae__Automation__ExportRawDataCsvRequest *input,
                              Saleae__Automation__ExportRawDataCsvReply_Closure closure,
                              void *closure_data);
  void (*export_raw_data_binary)(Saleae__Automation__Manager_Service *service,
                                 const Saleae__Automation__ExportRawDataBinaryRequest *input,
                                 Saleae__Automation__ExportRawDataBinaryReply_Closure closure,
                                 void *closure_data);
  void (*export_data_table_csv)(Saleae__Automation__Manager_Service *service,
                                const Saleae__Automation__ExportDataTableCsvRequest *input,
                                Saleae__Automation__ExportDataTableCsvReply_Closure closure,
                                void *closure_data);
  void (*legacy_export_analyzer)(Saleae__Automation__Manager_Service *service,
                                 const Saleae__Automation__LegacyExportAnalyzerRequest *input,
                                 Saleae__Automation__LegacyExportAnalyzerReply_Closure closure,
                                 void *closure_data);
};
typedef void (*Saleae__Automation__Manager_ServiceDestroy)(Saleae__Automation__Manager_Service *);
void saleae__automation__manager__init (Saleae__Automation__Manager_Service *service,
                                        Saleae__Automation__Manager_ServiceDestroy destroy);
#define SALEAE__AUTOMATION__MANAGER__BASE_INIT \
    { &saleae__automation__manager__descriptor, protobuf_c_service_invoke_internal, NULL }
#define SALEAE__AUTOMATION__MANAGER__INIT(function_prefix__) \
    { SALEAE__AUTOMATION__MANAGER__BASE_INIT,\
      function_prefix__ ## get_app_info,\
      function_prefix__ ## get_devices,\
      function_prefix__ ## start_capture,\
      function_prefix__ ## stop_capture,\
      function_prefix__ ## wait_capture,\
      function_prefix__ ## load_capture,\
      function_prefix__ ## save_capture,\
      function_prefix__ ## close_capture,\
      function_prefix__ ## add_analyzer,\
      function_prefix__ ## remove_analyzer,\
      function_prefix__ ## add_high_level_analyzer,\
      function_prefix__ ## remove_high_level_analyzer,\
      function_prefix__ ## export_raw_data_csv,\
      function_prefix__ ## export_raw_data_binary,\
      function_prefix__ ## export_data_table_csv,\
      function_prefix__ ## legacy_export_analyzer  }
void saleae__automation__manager__get_app_info(ProtobufCService *service,
                                               const Saleae__Automation__GetAppInfoRequest *input,
                                               Saleae__Automation__GetAppInfoReply_Closure closure,
                                               void *closure_data);
void saleae__automation__manager__get_devices(ProtobufCService *service,
                                              const Saleae__Automation__GetDevicesRequest *input,
                                              Saleae__Automation__GetDevicesReply_Closure closure,
                                              void *closure_data);
void saleae__automation__manager__start_capture(ProtobufCService *service,
                                                const Saleae__Automation__StartCaptureRequest *input,
                                                Saleae__Automation__StartCaptureReply_Closure closure,
                                                void *closure_data);
void saleae__automation__manager__stop_capture(ProtobufCService *service,
                                               const Saleae__Automation__StopCaptureRequest *input,
                                               Saleae__Automation__StopCaptureReply_Closure closure,
                                               void *closure_data);
void saleae__automation__manager__wait_capture(ProtobufCService *service,
                                               const Saleae__Automation__WaitCaptureRequest *input,
                                               Saleae__Automation__WaitCaptureReply_Closure closure,
                                               void *closure_data);
void saleae__automation__manager__load_capture(ProtobufCService *service,
                                               const Saleae__Automation__LoadCaptureRequest *input,
                                               Saleae__Automation__LoadCaptureReply_Closure closure,
                                               void *closure_data);
void saleae__automation__manager__save_capture(ProtobufCService *service,
                                               const Saleae__Automation__SaveCaptureRequest *input,
                                               Saleae__Automation__SaveCaptureReply_Closure closure,
                                               void *closure_data);
void saleae__automation__manager__close_capture(ProtobufCService *service,
                                                const Saleae__Automation__CloseCaptureRequest *input,
                                                Saleae__Automation__CloseCaptureReply_Closure closure,
                                                void *closure_data);
void saleae__automation__manager__add_analyzer(ProtobufCService *service,
                                               const Saleae__Automation__AddAnalyzerRequest *input,
                                               Saleae__Automation__AddAnalyzerReply_Closure closure,
                                               void *closure_data);
void saleae__automation__manager__remove_analyzer(ProtobufCService *service,
                                                  const Saleae__Automation__RemoveAnalyzerRequest *input,
                                                  Saleae__Automation__RemoveAnalyzerReply_Closure closure,
                                                  void *closure_data);
void saleae__automation__manager__add_high_level_analyzer(ProtobufCService *service,
                                                          const Saleae__Automation__AddHighLevelAnalyzerRequest *input,
                                                          Saleae__Automation__AddHighLevelAnalyzerReply_Closure closure,
                                                          void *closure_data);
void saleae__automation__manager__remove_high_level_analyzer(ProtobufCService *service,
                                                             const Saleae__Automation__RemoveHighLevelAnalyzerRequest *input,
                                                             Saleae__Automation__RemoveHighLevelAnalyzerReply_Closure closure,
                                                             void *closure_data);
void saleae__automation__manager__export_raw_data_csv(ProtobufCService *service,
                                                      const Saleae__Automation__ExportRawDataCsvRequest *input,
                                                      Saleae__Automation__ExportRawDataCsvReply_Closure closure,
                                                      void *closure_data);
void saleae__automation__manager__export_raw_data_binary(ProtobufCService *service,
                                                         const Saleae__Automation__ExportRawDataBinaryRequest *input,
                                                         Saleae__Automation__ExportRawDataBinaryReply_Closure closure,
                                                         void *closure_data);
void saleae__automation__manager__export_data_table_csv(ProtobufCService *service,
                                                        const Saleae__Automation__ExportDataTableCsvRequest *input,
                                                        Saleae__Automation__ExportDataTableCsvReply_Closure closure,
                                                        void *closure_data);
void saleae__automation__manager__legacy_export_analyzer(ProtobufCService *service,
                                                         const Saleae__Automation__LegacyExportAnalyzerRequest *input,
                                                         Saleae__Automation__LegacyExportAnalyzerReply_Closure closure,
                                                         void *closure_data);

/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    saleae__automation__this_api_version__descriptor;
extern const ProtobufCEnumDescriptor    saleae__automation__error_code__descriptor;
extern const ProtobufCEnumDescriptor    saleae__automation__radix_type__descriptor;
extern const ProtobufCEnumDescriptor    saleae__automation__device_type__descriptor;
extern const ProtobufCEnumDescriptor    saleae__automation__channel_type__descriptor;
extern const ProtobufCEnumDescriptor    saleae__automation__digital_trigger_type__descriptor;
extern const ProtobufCEnumDescriptor    saleae__automation__digital_trigger_linked_channel_state__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__version__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__app_info__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__device__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__logic_channels__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__capture_info__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__logic_device_configuration__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__glitch_filter_entry__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__manual_capture_mode__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__timed_capture_mode__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__digital_trigger_linked_channel__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__digital_trigger_capture_mode__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__capture_configuration__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__get_devices_request__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__get_devices_reply__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__start_capture_request__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__start_capture_reply__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__stop_capture_request__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__stop_capture_reply__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__wait_capture_request__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__wait_capture_reply__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__load_capture_request__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__load_capture_reply__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__save_capture_request__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__save_capture_reply__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__close_capture_request__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__close_capture_reply__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__export_raw_data_csv_request__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__export_raw_data_csv_reply__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__export_raw_data_binary_request__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__export_raw_data_binary_reply__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__analyzer_setting_value__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__add_analyzer_request__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__add_analyzer_request__settings_entry__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__add_analyzer_reply__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__remove_analyzer_request__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__remove_analyzer_reply__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__high_level_analyzer_setting_value__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__add_high_level_analyzer_request__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__add_high_level_analyzer_request__settings_entry__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__add_high_level_analyzer_reply__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__remove_high_level_analyzer_request__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__remove_high_level_analyzer_reply__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__data_table_analyzer_configuration__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__data_table_filter__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__export_data_table_csv_request__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__export_data_table_csv_reply__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__legacy_export_analyzer_request__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__legacy_export_analyzer_reply__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__get_app_info_request__descriptor;
extern const ProtobufCMessageDescriptor saleae__automation__get_app_info_reply__descriptor;
extern const ProtobufCServiceDescriptor saleae__automation__manager__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_saleae_2fgrpc_2fsaleae_2eproto__INCLUDED */
